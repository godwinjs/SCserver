{"version":3,"file":"columns.test.js","names":["describe","it","expect","generateColumnsDescription","schema","value","type","String","width","Number","to","equal"],"sources":["../../source/write/columns.test.js"],"sourcesContent":["import generateColumnsDescription from './columns.js'\r\n\r\ndescribe('generateColumns()', () => {\r\n  it('should generate columns description', () => {\r\n    expect(generateColumnsDescription({\r\n      schema: [{\r\n        value: 'Test',\r\n        type: String,\r\n        width: 25\r\n      }, {\r\n        value: 1000,\r\n        type: Number,\r\n        width: 10\r\n      }]\r\n    })).to.equal(\r\n    \t'<cols><col min=\"1\" max=\"1\" width=\"25\" customWidth=\"1\"/><col min=\"2\" max=\"2\" width=\"10\" customWidth=\"1\"/></cols>'\r\n    )\r\n  })\r\n})"],"mappings":";;AAAA;;;;AAEAA,QAAQ,CAAC,mBAAD,EAAsB,YAAM;EAClCC,EAAE,CAAC,qCAAD,EAAwC,YAAM;IAC9CC,MAAM,CAAC,IAAAC,mBAAA,EAA2B;MAChCC,MAAM,EAAE,CAAC;QACPC,KAAK,EAAE,MADA;QAEPC,IAAI,EAAEC,MAFC;QAGPC,KAAK,EAAE;MAHA,CAAD,EAIL;QACDH,KAAK,EAAE,IADN;QAEDC,IAAI,EAAEG,MAFL;QAGDD,KAAK,EAAE;MAHN,CAJK;IADwB,CAA3B,CAAD,CAAN,CAUIE,EAVJ,CAUOC,KAVP,CAWC,iHAXD;EAaD,CAdC,CAAF;AAeD,CAhBO,CAAR"}