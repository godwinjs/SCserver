{"version":3,"file":"removeInvalidXmlCharacters.js","names":["INVALID_CHARACTERS","DISCOURAGED_CHARACTERS","RegExp","removeInvalidXmlCharacters","string","removeDiscouragedCharacters","replace"],"sources":["../../source/xml/removeInvalidXmlCharacters.js"],"sourcesContent":["// Copy-pasted from:\r\n// https://gist.github.com/john-doherty/b9195065884cdbfd2017a4756e6409cc\r\n\r\nconst INVALID_CHARACTERS = /((?:[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFD\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))/g\r\nconst DISCOURAGED_CHARACTERS = new RegExp('([\\\\x7F-\\\\x84]|[\\\\x86-\\\\x9F]|[\\\\uFDD0-\\\\uFDEF]|(?:\\\\uD83F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD87F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD8BF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD8FF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD93F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD97F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD9BF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD9FF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDA3F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDA7F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDABF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDAFF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDB3F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDB7F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDBBF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDBFF[\\\\uDFFE\\\\uDFFF])(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))', 'g')\r\n\r\n/**\r\n * Removes invalid XML characters from a string\r\n * @param {string} string - a string containing potentially invalid XML characters (non-UTF8 characters, STX, EOX etc)\r\n * @param {boolean} removeDiscouragedCharacters - whether it should also remove discouraged but valid XML characters\r\n * @return {string} a sanitized string stripped of invalid (and by default also discouraged) XML characters\r\n */\r\nexport default function removeInvalidXmlCharacters(string, { removeDiscouragedCharacters = true } = {}) {\r\n\t// Remove everything forbidden by XML 1.0 specification, plus the unicode replacement character U+FFFD.\r\n\tstring = string.replace(INVALID_CHARACTERS, '')\r\n\r\n\tif (removeDiscouragedCharacters) {\r\n\t\t// Remove everything discouraged by XML 1.0 specification.\r\n\t\tstring = string.replace(DISCOURAGED_CHARACTERS, '')\r\n\t}\r\n\r\n\treturn string\r\n}"],"mappings":";;;;;;AAAA;AACA;AAEA,IAAMA,kBAAkB,GAAG,4HAA3B;AACA,IAAMC,sBAAsB,GAAG,IAAIC,MAAJ,CAAW,qqBAAX,EAAkrB,GAAlrB,CAA/B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACe,SAASC,0BAAT,CAAoCC,MAApC,EAAyF;EAAA,+EAAJ,EAAI;EAAA,iCAA3CC,2BAA2C;EAAA,IAA3CA,2BAA2C,sCAAb,IAAa;;EACvG;EACAD,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAeN,kBAAf,EAAmC,EAAnC,CAAT;;EAEA,IAAIK,2BAAJ,EAAiC;IAChC;IACAD,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAeL,sBAAf,EAAuC,EAAvC,CAAT;EACA;;EAED,OAAOG,MAAP;AACA"}